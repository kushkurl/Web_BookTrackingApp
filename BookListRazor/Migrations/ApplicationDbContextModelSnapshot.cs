// <auto-generated />
using BookListRazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookListRazor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookListRazor.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIdNameToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CIdNameToken");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BookListRazor.Model.Category", b =>
                {
                    b.Property<string>("NameToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeIdName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NameToken");

                    b.HasIndex("TypeIdName");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BookListRazor.Model.CategoryType", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("CategoryType");
                });

            modelBuilder.Entity("BookListRazor.Model.Book", b =>
                {
                    b.HasOne("BookListRazor.Model.Category", "CId")
                        .WithMany("Books")
                        .HasForeignKey("CIdNameToken");
                });

            modelBuilder.Entity("BookListRazor.Model.Category", b =>
                {
                    b.HasOne("BookListRazor.Model.CategoryType", "TypeId")
                        .WithMany("Type")
                        .HasForeignKey("TypeIdName");
                });
#pragma warning restore 612, 618
        }
    }
}
